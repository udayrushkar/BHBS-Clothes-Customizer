/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/no-explicit-any */

import React, { useState, useRef } from "react";
import { Slider } from "./ui/slider";

export default function MaleScrub({color1,logos, showSecondColor, secondColor, selectValue}: any) {
  const [selectedLogoIndex, setSelectedLogoIndex] = useState(-1);
  const [sizes, setSizes] = useState([40, 40, 40]);
  
  const [isDragging, setIsDragging] = useState(false);
  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 });
  const [positions, setPositions] = useState<{ x: number; y: number }[]>([{x:0,y:0},{x:0,y:0},{x:0,y:0}]);
  const [color2, setColor2] = useState("#000000");

  const fileInputRefs = [useRef(null), useRef(null), useRef(null)];
  const canvasRef = useRef(null);

  // Check if a click is on a specific logo
  const getClickedLogoIndex = (e: any) => {
    const rect = e.currentTarget.getBoundingClientRect();
    const mouseX = e.clientX - rect.left;
    const mouseY = e.clientY - rect.top;

    // Check each logo in reverse order (top to bottom in z-index)
    for (let i = logos.length - 1; i >= 0; i--) {
      if (!logos[i]) continue;
      
      const logoRect = {
        x: 200 + positions[i].x - sizes[i] / 2,
        y: 250 + positions[i].y - sizes[i] / 2,
        width: sizes[i],
        height: sizes[i],
      };

      if (
        mouseX >= logoRect.x &&
        mouseX <= logoRect.x + logoRect.width &&
        mouseY >= logoRect.y &&
        mouseY <= logoRect.y + logoRect.height
      ) {
        return i;
      }
    }
    return -1;
  };

  const handleMouseDown = (e: any) => {
    e.preventDefault();
    const clickedLogoIndex = getClickedLogoIndex(e);
    
    if (clickedLogoIndex !== -1) {
      // Select the clicked logo
      setSelectedLogoIndex(clickedLogoIndex);
      
      // Start dragging immediately
      setIsDragging(true);
      const rect = e.currentTarget.getBoundingClientRect();
      const mouseX = e.clientX - rect.left;
      const mouseY = e.clientY - rect.top;

      setDragOffset({
        x: mouseX - (200 + positions[clickedLogoIndex].x),
        y: mouseY - (250 + positions[clickedLogoIndex].y),
      });
    } else {
      // Clicked outside any logo - deselect
      setSelectedLogoIndex(-1);
      setIsDragging(false);
    }
  };

  const handleMouseMove = (e: any) => {
    if (!isDragging || selectedLogoIndex === -1 || !logos[selectedLogoIndex]) return;

    e.preventDefault();
    const rect = e.currentTarget.getBoundingClientRect();
    const mouseX = e.clientX - rect.left;
    const mouseY = e.clientY - rect.top;

    // Direct position update without spread operator for better performance
    setPositions(prevPositions => {
      const newPositions = [...prevPositions];
      newPositions[selectedLogoIndex] = {
        x: mouseX - 200 - dragOffset.x,
        y: mouseY - 250 - dragOffset.y,
      };
      return newPositions;
    });
  };

  const handleMouseUp = () => {
    setIsDragging(false);
  };

  // Handle wheel scrolling for resizing
  const handleWheel = (e: any) => {
    e.preventDefault();
    
    const clickedLogoIndex = getClickedLogoIndex(e);
    if (clickedLogoIndex === -1) return;

    const delta = e.deltaY > 0 ? -5 : 5; // Scroll down = smaller, scroll up = bigger
    const newSizes = [...sizes];
    const newSize = Math.max(20, Math.min(200, sizes[clickedLogoIndex] + delta));
    newSizes[clickedLogoIndex] = newSize;
    setSizes(newSizes);
    
    // Also select the logo being resized
    setSelectedLogoIndex(clickedLogoIndex);
  };

  const resetPosition = () => {
    if (selectedLogoIndex === -1) return;
    
    const newPositions = [...positions];
    const newSizes = [...sizes];
    newPositions[selectedLogoIndex] = { x: 0, y: 0 };
    newSizes[selectedLogoIndex] = 100;
    setPositions(newPositions);
    setSizes(newSizes);
  };

  const handleSizeChange = (value: any) => {
    console.log("sizeChnage called")
    
  
    // Ensure a logo is selected
    if (selectedLogoIndex === -1) return;
  
    const newSize = +value;
  
    // Update sizes array with new value
    setSizes(prevSizes => {
      const updatedSizes = [...prevSizes];
      updatedSizes[selectedLogoIndex] = newSize;
      return updatedSizes;
    });
  };
  
console.log("size",sizes)
  return (
    <>
      <div className="bg-gradient-to-br w-full">
        <div className="max-w-4xl mx-auto">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div className="lg:col-span-3">
              <div className="">
                <div className="flex justify-center">
                  <div
                    className="relative bg-white overflow-hidden cursor-move select-none"
                    style={{ 
                      width: "1200px",
                    }}
                    onMouseDown={handleMouseDown}
                    onMouseMove={handleMouseMove}
                    onMouseUp={handleMouseUp}
                    onMouseLeave={handleMouseUp}
                    onWheel={handleWheel}
                  >
<svg viewBox="0 0 1200 1150" style={{margin:"auto", marginLeft: '-50px'}} fill="none" xmlns="http://www.w3.org/2000/svg">

{/* <rect style={{maxWidth:"100%",width:"100%"}} fill="white"/> */}
<rect width="1365.33" transform="translate(0 -32)" fill="white" style={{width:"100%",maxWidth:"100%"}}/>
<path d="M346.031 62.2578C340.406 64.455 324.094 70.3437 309.938 75.4414C269.156 90.1191 274.313 87.0429 253.875 109.103C244.125 119.562 228.563 136.525 219.188 146.809L202.125 165.529L227.156 189.699C252.094 213.869 264.563 225.207 266.156 225.207C266.625 225.207 271.875 220.812 277.781 215.539C283.688 210.178 288.844 205.871 289.406 205.871C291 205.871 289.875 254.562 287.438 284.533C284.719 318.459 279.938 361.35 275.719 391.145C272.625 412.238 272.625 411.271 276.938 412.326C282.094 413.557 294.375 414.875 312.75 416.105C335.719 417.687 484.781 417.687 508.219 416.105C528.188 414.787 550.969 412.59 551.625 411.975C551.906 411.799 551.344 407.492 550.5 402.57C548.719 391.936 542.344 342.102 539.719 317.053C536.063 282.863 534 248.762 534 221.955V204.816L545.438 215.012C551.719 220.637 557.531 225.207 558.188 225.207C559.688 225.207 592.313 195.236 611.063 176.691L623.156 164.65L613.5 154.279C608.156 148.566 596.438 135.998 587.438 126.33C560.719 97.3261 554.063 90.9101 548.156 88.1855C545.25 86.7793 535.969 83.0879 527.438 79.9238C518.906 76.8476 502.313 70.6074 490.406 66.2129L468.844 58.3027L461.813 60.3242C447.188 64.7187 438 65.6855 411.188 65.6855C382.875 65.6855 375.563 64.7187 357.75 58.83C357 58.5664 351.75 60.1484 346.031 62.2578ZM486.656 67.1797C494.906 70.3437 511.969 76.7597 524.625 81.4179C537.281 86.0761 548.156 90.207 548.813 90.5586C549.75 91.1738 549.281 93.1074 546.75 99.1718C540.656 114.113 535.5 135.559 532.969 156.652C531.469 169.133 531.469 243.752 532.875 265.637C534.188 284.885 535.688 303.078 536.344 308L536.813 311.34H491.813H446.813V358.801V406.262H412.594H378.375V358.801V311.34H332.906C307.875 311.34 287.438 311.076 287.438 310.637C287.438 310.285 288.094 303.518 288.844 295.607C291.469 267.922 292.313 240.148 291.938 196.203C291.563 156.301 291.375 151.818 289.406 141.711C286.125 123.869 280.688 105.852 274.594 92.6679C274.313 91.9648 276.375 90.6465 280.5 88.8886C286.969 86.164 334.969 68.7617 336.188 68.7617C336.469 68.7617 340.594 74.8261 345.375 82.2968C355.781 98.6445 365.906 112.18 376.313 124.045C384.75 133.625 408.281 155.422 411.75 156.828C413.719 157.707 414.75 157.092 421.219 151.555C442.219 133.801 457.313 116.838 471.281 94.9531C480.281 81.0664 487.5 68.7617 486.844 68.7617C486.563 68.7617 482.906 74.5625 478.594 81.6816C469.313 97.0625 458.813 112.18 450.563 121.936C444.469 129.143 422.25 150.236 416.344 154.543L413.063 156.828L406.5 151.818C402.938 149.094 399.938 146.545 399.938 146.281C399.938 146.018 407.25 139.074 416.156 130.812C438.094 110.598 452.531 92.1406 465.469 67.9707C467.813 63.664 469.875 60.8515 470.531 61.1152C471.188 61.3789 478.406 64.1035 486.656 67.1797ZM361.5 71.5742C373.688 91.9648 387.656 109.719 403.406 125.1L412.031 133.449L405.469 139.602L398.813 145.666L389.063 135.998C372.938 120.178 358.125 101.281 343.406 77.8144L337.313 67.9707L345.375 64.8945C349.875 63.2246 354 61.8183 354.563 61.7304C355.125 61.7304 358.313 66.2129 361.5 71.5742ZM371.344 64.8945C385.781 68.0586 406.969 69.289 426 68.0586C441.094 67.0039 456.469 64.7187 462.188 62.6972C463.688 62.082 465.094 61.8183 465.281 62.082C465.844 62.6093 459.375 74.3867 457.875 75.5293C453.844 78.6054 430.219 81.9453 412.125 81.9453C393.563 81.9453 368.531 78.166 366.469 75.0019C366 74.2109 363.938 70.8711 361.969 67.5312C359.063 62.6093 358.688 61.5547 360.188 62.1699C361.125 62.5215 366.188 63.8398 371.344 64.8945ZM374.531 78.957C392.531 83.9668 428.719 84.0547 448.969 79.2207C453.094 78.2539 456.563 77.6386 456.75 77.8144C457.406 78.4297 446.531 94.1621 438.844 103.742C434.719 108.928 427.219 117.102 422.25 121.936L413.063 130.725L403.406 121.496C398.063 116.398 390.094 107.697 385.688 102.16C376.875 91.0859 367.594 77.5508 368.813 77.5508C369.281 77.5508 371.813 78.166 374.531 78.957ZM279.281 107.434C283.125 118.156 286.688 132.57 289.031 146.984C290.25 154.543 290.625 162.541 290.719 178.801V200.51L286.969 204.113C284.906 206.135 280.781 209.826 277.781 212.287L272.25 216.682L241.875 188.205C225.188 172.561 211.5 159.553 211.5 159.201C211.5 158.674 247.125 119.562 263.344 102.248L272.719 92.3164L274.406 95.2168C275.25 96.8867 277.5 102.336 279.281 107.434ZM590.719 133.186C603.094 146.545 613.219 157.883 613.219 158.41C613.219 158.85 599.344 172.297 582.375 188.205L551.531 217.209L543 209.65C538.313 205.52 534.094 201.477 533.625 200.773C532.313 198.664 533.625 157.443 535.313 147.424C538.781 126.77 544.031 107.258 549 96.4472L551.063 92.0527L559.594 100.49C564.375 105.061 578.344 119.826 590.719 133.186ZM589.406 193.918L558.469 222.922L555.844 221.164C554.438 220.109 553.219 218.879 553.219 218.264C553.219 217.736 566.906 204.201 583.688 188.293L614.156 159.289L617.25 162.102L620.344 164.914L589.406 193.918ZM241.5 188.732L271.969 217.297L268.875 220.109L265.875 223.01L248.906 207.189C239.625 198.488 226.125 185.568 218.906 178.449L205.781 165.529L207.844 162.893C209.063 161.398 210.188 160.168 210.469 160.168C210.844 160.168 224.719 173 241.5 188.732ZM377.438 359.24V406.262L367.875 406.437L358.219 406.613L367.875 406.877L377.438 407.228V411.535V415.93H372.563C340.031 415.842 277.594 411.799 275.813 409.602C275.625 409.514 275.719 407.668 276 405.559C276.281 402.57 276.75 401.867 278.438 401.779C280.406 401.603 280.406 401.603 278.438 401.252C276.563 400.9 276.563 400.725 277.688 393.254C279.656 381.037 283.5 350.012 285.094 333.312C285.938 324.875 286.781 316.613 287.063 315.031L287.531 312.219H332.438H377.438V359.24ZM536.813 313.186C536.813 314.855 545.25 385.256 546.188 391.32C547.594 400.461 547.5 400.812 544.125 401.252L541.031 401.603L544.406 401.691C547.406 401.867 547.875 402.219 548.438 404.592C549.656 410.48 549.938 410.305 538.5 411.359C523.875 412.853 505.125 413.996 488.813 414.611C481.125 414.875 468.844 415.314 461.344 415.578L447.75 416.018V411.623V407.141L457.406 406.965L466.969 406.789L457.406 406.525L447.75 406.174V359.24V312.219H492.281C523.781 312.219 536.813 312.482 536.813 313.186ZM446.813 411.535V415.93H412.594H378.375V411.535V407.141H412.594H446.813V411.535Z" fill="black"/>
<path d="M283.5 402.482C284.625 402.658 286.5 402.658 287.719 402.482C288.844 402.307 287.906 402.131 285.563 402.131C283.219 402.131 282.281 402.307 283.5 402.482Z" fill="black"/>
<path d="M293.344 403.361C294.75 403.537 296.812 403.537 298.031 403.361C299.156 403.185 298.031 403.01 295.406 403.01C292.875 403.01 291.844 403.185 293.344 403.361Z" fill="black"/>
<path d="M305.063 404.24C306.656 404.416 309.469 404.416 311.156 404.24C312.75 404.064 311.438 403.889 308.063 403.889C304.688 403.889 303.375 404.064 305.063 404.24Z" fill="black"/>
<path d="M320.531 405.119C322.969 405.295 326.906 405.295 329.438 405.119C331.875 404.943 329.813 404.855 324.938 404.855C320.063 404.855 318 404.943 320.531 405.119Z" fill="black"/>
<path d="M340.219 405.998C343.219 406.174 347.812 406.174 350.531 405.998C353.25 405.822 350.812 405.734 345.094 405.734C339.469 405.734 337.219 405.822 340.219 405.998Z" fill="black"/>
<path d="M533.344 402.482C534.75 402.658 536.812 402.658 538.031 402.482C539.156 402.307 538.031 402.131 535.406 402.131C532.875 402.131 531.844 402.307 533.344 402.482Z" fill="black"/>
<path d="M521.625 403.361C523.312 403.537 525.844 403.537 527.25 403.361C528.656 403.185 527.25 403.01 524.156 403.01C521.062 403.01 519.937 403.185 521.625 403.361Z" fill="black"/>
<path d="M507.562 404.24C509.156 404.416 511.969 404.416 513.656 404.24C515.25 404.064 513.937 403.889 510.562 403.889C507.187 403.889 505.875 404.064 507.562 404.24Z" fill="black"/>
<path d="M491.625 405.119C493.781 405.295 497.156 405.295 499.125 405.119C501 404.943 499.219 404.768 495.094 404.768C490.969 404.768 489.375 404.943 491.625 405.119Z" fill="black"/>
<path d="M472.875 405.998C475.031 406.174 478.594 406.174 480.844 405.998C483 405.822 481.219 405.646 476.813 405.646C472.406 405.646 470.625 405.822 472.875 405.998Z" fill="black"/>
<path d="M914.625 61.0273C901.875 64.2793 887.906 65.5976 864.469 65.5976C841.125 65.6855 830.812 64.8066 815.906 61.5547L807.656 59.7968L797.156 64.1914C791.344 66.5644 775.875 72.1894 762.75 76.6718C724.969 89.5039 727.875 87.7461 706.312 110.949C687.187 131.428 658.219 163.156 657.375 164.387C657 164.914 657.094 166.057 657.469 166.76C658.875 169.045 718.969 225.207 720 225.207C720.656 225.207 726.094 220.9 732.281 215.627L743.531 206.047L743.812 218C744.187 233.117 742.5 274.25 740.719 295.08C738.562 319.074 730.125 393.078 728.344 402.834C727.5 407.668 727.031 411.711 727.312 411.975C727.969 412.59 750.281 414.611 772.125 416.105C796.125 417.687 938.719 417.687 963.844 416.105C982.594 414.875 997.687 413.557 1002.19 412.766C1005.28 412.15 1005.28 414.875 1001.91 390.353C1000.87 382.883 999.094 368.205 998.062 357.834C996.937 347.463 995.062 329.709 993.844 318.371C989.906 282.951 988.687 265.285 988.031 234.523L987.469 204.641L999.469 214.924C1006.03 220.549 1011.94 225.207 1012.59 225.207C1013.81 225.207 1070.72 171.506 1073.91 167.375L1075.69 165.002L1070.53 159.289C1051.87 138.811 1018.78 103.918 1011.19 96.7988L1002.28 88.2734L991.031 84.3183C984.844 82.1211 971.812 77.5508 961.969 74.123C952.219 70.7832 938.906 66.125 932.437 63.7519L920.719 59.4453L914.625 61.0273ZM829.781 66.5644C853.781 69.8164 887.25 69.0254 909.562 64.8066L920.25 62.7851L926.156 64.8066C929.344 65.9492 932.812 67.0918 933.75 67.3554C936.187 68.1465 935.531 68.5859 926.156 71.9258C921.656 73.5078 918.469 74.8261 919.031 74.914C920.625 74.914 932.437 70.6953 934.781 69.289C936.469 68.3222 940.125 69.289 964.312 77.5508C979.594 82.6484 994.406 87.9218 997.312 89.1523L1002.66 91.4375L999.844 98.2929C995.719 108.137 990.094 129.67 987.75 144.787C985.969 156.037 985.594 162.717 985.219 190.93C984.656 237.072 986.156 268.537 991.031 314.416C992.25 326.018 993.937 342.453 994.781 350.891C995.625 359.328 997.312 374.182 998.625 383.85C999.937 393.518 1001.25 403.449 1001.53 405.998L1002.09 410.48L997.969 411.008C989.812 412.062 973.781 413.293 954 414.348C926.625 415.842 804.375 415.842 780.094 414.348C758.625 413.029 730.594 410.656 730.125 410.217C729.844 410.041 730.031 408.02 730.312 405.822C730.969 401.955 731.062 401.867 734.437 401.691L737.906 401.603L734.719 401.252L731.531 400.9L732.094 395.891C745.594 276.887 745.781 274.338 746.062 203.674C746.344 162.805 746.156 155.773 744.656 146.105C741.844 127.648 736.219 106.818 731.25 96.1836L729.094 91.6133L731.719 90.2949C736.219 88.1855 747.375 84.2304 770.812 76.4082L793.406 68.9375L801.281 71.8379C805.594 73.5078 810.469 75.0019 811.969 75.3535C813.562 75.6172 810.937 74.4746 806.25 72.8925C801.562 71.2226 797.156 69.5527 796.5 69.2011C795.844 68.8496 798.094 67.4433 802.312 65.7734C808.969 63.0488 809.344 63.0488 814.312 64.1035C817.125 64.7187 824.156 65.8613 829.781 66.5644ZM731.625 99.875C738.187 116.223 743.156 139.514 744.937 161.486C746.156 177.219 746.156 194.885 744.937 199.016C744.187 201.389 741.375 204.553 733.875 211.232C718.5 224.855 721.5 224.855 707.625 211.496C701.062 205.256 687.562 192.424 677.531 182.844L659.344 165.617L672.375 151.203C700.5 120.178 726.75 92.4922 727.969 92.4922C728.25 92.4922 729.937 95.832 731.625 99.875ZM1041.37 131.428C1067.53 159.289 1067.62 159.465 1065.84 161.311C1064.16 163.244 1064.16 163.244 1066.12 161.75C1068 160.256 1068.09 160.256 1070.06 162.189C1071.19 163.332 1072.12 164.562 1072.12 165.002C1072.12 165.969 1067.44 170.627 1040.72 196.467C1028.34 208.508 1016.81 219.318 1015.22 220.461L1012.12 222.658L999.562 212.023L987.094 201.389L986.437 192.951C985.125 177.131 987.75 147.6 992.156 128.088C994.687 116.486 1000.12 98.9961 1002.47 94.7773L1003.97 92.0527L1009.5 97.7656C1012.59 100.93 1026.94 116.047 1041.37 131.428Z" fill="black"/>
<path d="M907.969 76.7598C904.031 77.6387 896.438 78.957 891.094 79.6602C885.75 80.3633 882.844 80.8906 884.813 80.9785C889.031 81.0664 907.969 78.0781 913.688 76.3203C919.594 74.5625 916.406 74.8262 907.969 76.7598Z" fill="black"/>
<path d="M819 77.1993C821.344 77.9024 824.906 78.6934 826.969 78.8692C829.031 79.1329 827.531 78.5176 823.688 77.6387C815.625 75.6172 812.813 75.3536 819 77.1993Z" fill="black"/>
<path d="M834.469 80.2755C836.531 80.8028 847.687 81.3301 859.312 81.418L880.406 81.6817L860.25 81.0665C849.187 80.7149 838.031 80.1876 835.406 79.9239C830.812 79.3965 830.812 79.3965 834.469 80.2755Z" fill="black"/>
<path d="M996 401.604C996.563 401.779 997.688 401.779 998.344 401.604C998.906 401.34 998.438 401.164 997.125 401.164C995.813 401.164 995.344 401.34 996 401.604Z" fill="black"/>
<path d="M741.938 402.482C743.063 402.658 744.938 402.658 746.156 402.482C747.281 402.307 746.344 402.131 744 402.131C741.656 402.131 740.719 402.307 741.938 402.482Z" fill="black"/>
<path d="M986.625 402.482C987.75 402.658 989.625 402.658 990.844 402.482C991.969 402.307 991.031 402.131 988.688 402.131C986.344 402.131 985.406 402.307 986.625 402.482Z" fill="black"/>
<path d="M752.719 403.361C754.125 403.537 756.375 403.537 757.875 403.361C759.281 403.185 758.063 403.01 755.25 403.01C752.438 403.01 751.219 403.185 752.719 403.361Z" fill="black"/>
<path d="M975.375 403.361C977.062 403.537 979.594 403.537 981 403.361C982.406 403.185 981 403.01 977.906 403.01C974.812 403.01 973.687 403.185 975.375 403.361Z" fill="black"/>
<path d="M765.375 404.24C766.969 404.416 769.781 404.416 771.469 404.24C773.062 404.064 771.75 403.889 768.375 403.889C765 403.889 763.687 404.064 765.375 404.24Z" fill="black"/>
<path d="M960.844 404.24C962.719 404.416 965.906 404.416 967.875 404.24C969.75 404.064 968.156 403.889 964.312 403.889C960.469 403.889 958.875 404.064 960.844 404.24Z" fill="black"/>
<path d="M778.5 405.119C780.094 405.295 782.906 405.295 784.594 405.119C786.187 404.943 784.875 404.768 781.5 404.768C778.125 404.768 776.812 404.943 778.5 405.119Z" fill="black"/>
<path d="M944.438 405.119C946.594 405.295 949.969 405.295 951.938 405.119C953.813 404.943 952.031 404.768 947.906 404.768C943.781 404.768 942.188 404.943 944.438 405.119Z" fill="black"/>
<path d="M794.906 405.998C797.344 406.174 801.188 406.174 803.344 405.998C805.5 405.822 803.531 405.734 798.844 405.734C794.25 405.734 792.469 405.822 794.906 405.998Z" fill="black"/>
<path d="M923.813 405.998C926.438 406.174 930.938 406.174 933.656 405.998C936.281 405.822 934.125 405.734 928.688 405.734C923.25 405.734 921.094 405.822 923.813 405.998Z" fill="black"/>
<path d="M837.094 406.877C851.344 407.053 874.781 407.053 889.125 406.877C903.375 406.789 891.656 406.701 863.063 406.701C834.469 406.701 822.75 406.789 837.094 406.877Z" fill="black"/>
<path d="M672.469 168.518C676.687 172.824 690.375 185.92 702.844 197.522C725.25 218.264 725.156 218.176 697.594 191.809C662.531 158.234 663.375 159.025 672.469 168.518Z" fill="black"/>
<path d="M1036.12 190.754C1020.66 205.607 1014.47 211.76 1022.34 204.553C1036.22 191.809 1065.19 163.684 1064.53 163.684C1064.34 163.684 1051.5 175.9 1036.12 190.754Z" fill="black"/>
<path d="M308.625 443.352C308.344 443.967 307.687 447.658 307.125 451.525C306.469 455.393 304.781 463.479 303.375 469.543C293.437 510.148 289.781 543.547 288.375 606.652C286.594 687.775 283.219 798.693 280.875 857.58C280.406 870.148 279.656 887.814 279.375 896.779L278.719 913.127L283.312 914.094C294.187 916.467 308.719 917.346 335.719 917.346C351.187 917.346 365.812 916.994 368.25 916.643L372.562 915.939L373.125 910.051C373.5 906.799 375.469 886.145 377.437 864.172C381.469 821.369 383.156 805.549 388.312 760.022C397.5 678.811 411 580.197 412.406 583.801C412.969 585.207 413.156 586.262 418.125 621.154C427.312 684.611 441.469 806.604 449.625 893.176C450.75 905.041 451.969 914.973 452.344 915.324C455.25 918.313 517.687 918.576 534.937 915.676C539.812 914.885 544.219 913.83 544.687 913.391C545.531 912.6 544.781 888.957 541.5 806.604C538.969 743.147 536.719 670.9 535.875 625.197C534.937 573.693 534.187 557.697 531.562 533.264C529.219 511.027 524.812 485.979 520.406 469.543C519.187 464.973 517.687 457.854 517.031 453.723C516.469 449.592 515.531 445.373 515.156 444.231L514.312 442.297H411.656C330.281 442.297 308.906 442.561 308.625 443.352ZM514.312 451.262C514.875 455.305 515.625 459.26 515.906 460.051C516.281 461.545 510.937 461.633 412.031 461.633H307.781L308.437 457.854C308.812 455.832 309.281 452.404 309.562 450.207C309.844 448.01 310.219 445.725 310.5 445.109C310.781 444.318 331.875 444.055 411.937 444.055H513.187L514.312 451.262ZM321.562 470.158C309.75 490.637 298.406 509.182 298.031 508.742C297.469 508.215 301.312 487.824 304.312 475.344C305.906 469.016 307.125 463.566 307.125 463.215C307.125 462.775 311.344 462.512 316.594 462.512H325.969L321.562 470.158ZM411.187 516.916C411.187 567.277 411 572.111 409.312 583.01C398.062 651.477 377.156 828.576 372.094 897.307C371.625 904.777 371.344 905.48 369.562 905.568C367.969 905.656 367.875 905.744 369.281 906.096C370.5 906.359 370.875 907.414 370.875 910.314C370.875 913.479 370.5 914.182 368.812 914.621C367.594 914.885 358.687 915.412 348.844 915.676C331.5 916.291 306.469 915.236 291.187 913.303C279.75 911.897 280.594 912.775 281.25 902.58C282.562 882.629 287.812 725.92 288.937 675.383L289.594 647.082H312.844C336 647.082 336.187 647.082 337.5 645.061C338.531 643.566 339.187 634.338 340.594 605.07C341.531 584.065 342.094 566.838 341.906 566.574C341.719 566.398 330.375 566.223 316.781 566.223H292.125V562.443C292.125 558.313 294.375 534.582 295.969 520.959C296.906 513.313 297.469 511.467 300.562 506.897C303.75 502.063 313.031 486.506 322.969 469.279L326.906 462.512H369.094H411.187V516.916ZM500.25 468.664C502.125 471.828 508.031 481.76 513.375 490.9C518.719 499.953 523.594 508.039 524.344 508.918C525.75 510.412 522.281 504.26 516.187 494.152C510 483.957 498.375 463.654 498.375 463.127C498.375 462.775 502.406 462.512 507.281 462.512H516.094L517.125 466.115C519.75 475.08 525 500.393 526.031 508.654C526.219 510.588 527.062 516.652 527.906 522.19C531.75 549.26 532.781 568.684 534 639.787C534.937 688.654 535.969 722.756 539.625 817.15C540.656 843.693 541.687 872.609 541.969 881.311C542.25 890.012 542.719 898.537 542.906 900.295L543.375 903.547L537.937 904.426L532.594 905.393L538.031 904.953L543.469 904.426L543.187 908.293L542.906 912.072L537.281 913.127C526.125 915.236 503.906 916.291 481.969 915.764C470.156 915.412 458.906 914.885 457.125 914.445L453.937 913.742L451.781 890.979C441.937 786.037 421.781 619.133 414.75 584.68C412.781 575.012 412.594 572.023 412.406 518.498L412.125 462.512L454.5 462.688L496.875 462.951L500.25 468.664ZM340.875 572.815V578.527H316.031H291.187V573.43C291.187 570.617 291.469 567.981 291.844 567.717C292.125 567.365 303.375 567.102 316.687 567.102H340.875V572.815ZM340.5 582.658C340.219 584.504 339.562 598.654 338.906 614.123C338.062 635.217 337.5 642.775 336.469 644.182C335.25 646.203 335.062 646.203 312.469 646.203H289.781L289.969 622.736C290.156 609.729 290.437 594.699 290.812 589.25L291.375 579.406H316.219H341.062L340.5 582.658Z" fill="black"/>
{/* Pant STart */}
<path d="M291 572.5L292 568L316.5 567L341 567.5V578.5H311H291V572.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
<path d="M325.5 463H307.5L300.5 493L298.5 507.5L325.5 463Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
<path d="M516 462.5H499L498.5 463L499 464.5L513 487L526 507L522 484.5L516 462.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
{/* Pant End */}

<path d="M283.969 904.338C284.812 904.514 286.125 904.514 286.781 904.338C287.344 904.074 286.687 903.898 285.094 903.898C283.594 903.898 283.031 904.074 283.969 904.338Z" fill="black"/>
<path d="M289.594 905.217C290.437 905.393 291.937 905.393 292.875 905.217C293.719 904.953 292.969 904.777 291.187 904.777C289.406 904.777 288.656 904.953 289.594 905.217Z" fill="black"/>
<path d="M296.625 906.096C297.75 906.271 299.437 906.271 300.375 906.096C301.219 905.832 300.281 905.656 298.219 905.744C296.156 905.744 295.406 905.92 296.625 906.096Z" fill="black"/>
<path d="M306 906.975C307.594 907.15 310.406 907.15 312.094 906.975C313.688 906.799 312.375 906.623 309 906.623C305.625 906.623 304.313 906.799 306 906.975Z" fill="black"/>
<path d="M359.437 906.975C361.125 907.15 363.656 907.15 365.062 906.975C366.469 906.799 365.062 906.623 361.969 906.623C358.875 906.623 357.75 906.799 359.437 906.975Z" fill="black"/>
<path d="M326.156 907.853C331.688 908.029 340.688 908.029 346.313 907.853C351.844 907.766 347.25 907.59 336.188 907.59C325.125 907.59 320.531 907.766 326.156 907.853Z" fill="black"/>
<path d="M527.25 906.096C528.375 906.271 530.063 906.271 531 906.096C531.844 905.832 530.906 905.656 528.844 905.744C526.781 905.744 526.031 905.92 527.25 906.096Z" fill="black"/>
<path d="M456 906.975C457.125 907.15 459 907.15 460.219 906.975C461.344 906.799 460.406 906.623 458.063 906.623C455.719 906.623 454.781 906.799 456 906.975Z" fill="black"/>
<path d="M517.406 906.975C518.812 907.15 521.062 907.15 522.562 906.975C523.969 906.799 522.75 906.623 519.937 906.623C517.125 906.623 515.906 906.799 517.406 906.975Z" fill="black"/>
<path d="M475.219 907.853C482.25 908.029 493.875 908.029 501 907.853C508.031 907.766 502.219 907.59 488.063 907.59C473.906 907.59 468.094 907.766 475.219 907.853Z" fill="black"/>
<path d="M765.281 442.912C765 443.351 764.156 447.57 763.219 452.404C762.375 457.238 760.687 465.148 759.469 469.982C754.781 488.791 750 520.519 747.281 552.16C746.344 561.916 745.406 589.162 744.937 620.275C744.469 648.752 743.156 696.213 742.125 725.744C739.219 810.031 736.5 879.025 735.656 895.812C735 907.59 735.094 911.457 735.937 912.336C737.625 914.006 748.594 915.852 763.875 916.994C780.844 918.225 824.25 917.697 827.062 916.291C828.844 915.324 829.125 914.094 829.687 905.744C831.75 875.158 843.844 761.076 850.969 704.65C858.375 645.676 867.375 583.098 868.219 583.977C868.969 584.592 875.344 627.922 879.937 662.902C886.875 715.9 895.594 794.299 902.437 865.051C904.5 886.584 906.469 906.799 906.75 910.139C907.312 915.588 907.5 916.115 909.844 916.643C913.969 917.785 963 917.346 975.562 916.115C988.969 914.885 999.375 912.863 1000.69 911.369C1001.25 910.666 1001.16 900.471 1000.31 883.947C999.281 860.041 997.875 821.633 995.25 745.08C994.687 730.051 993.844 705.793 993.375 691.027C992.812 676.262 991.969 643.83 991.5 618.957C990.187 553.918 986.531 514.191 978.75 479.65C975.375 464.709 973.031 453.195 972.094 447.57L971.344 442.736L868.5 442.473C811.969 442.385 765.469 442.56 765.281 442.912ZM970.594 452.756C971.25 457.326 971.625 461.193 971.531 461.369C971.344 461.545 924.562 461.545 867.656 461.457L764.156 461.193L765.469 452.58L766.781 444.055L868.125 444.23L969.469 444.494L970.594 452.756ZM867.75 516.301C867.75 565.871 867.656 571.057 865.875 581.164C854.812 646.291 837.562 790.52 828 898.361C827.25 906.711 826.312 913.83 826.031 914.182C825.094 915.061 811.125 915.852 796.312 915.939C772.594 916.115 740.719 913.303 738.094 910.842C737.531 910.314 737.812 897.395 738.75 874.543C740.156 842.902 742.031 792.717 744.937 712.121C745.5 697.355 746.344 661.76 746.812 633.02C747.937 567.717 750 538.098 755.812 500.744C757.875 487.736 761.719 468.84 763.312 464.006C763.781 462.6 767.062 462.512 815.812 462.512H867.75V516.301ZM975.375 475.432C979.781 494.68 981.75 506.984 984.469 530.627C987.562 558.137 988.312 574.396 989.625 636.975C990.187 660.617 991.031 690.5 991.5 703.332C991.969 716.164 993.094 746.574 993.844 771.008C995.25 813.811 997.406 869.621 998.625 897.219L999.281 910.578L994.219 911.545C991.406 912.072 985.969 912.951 982.125 913.478C973.687 914.533 919.406 915.588 913.406 914.797L909.281 914.182L908.625 906.535C906 874.543 898.594 802.648 892.031 744.201C885.281 684.084 877.312 623.439 871.687 590.393C869.25 575.451 869.156 575.275 868.875 518.937L868.594 462.512H920.531H972.469L975.375 475.432Z" fill="black"/>
<path d="M1031 121.5L1004 92L960 74.5L922 63.5L880.5 68H842.5L807.5 63.5L779 74.5L749.5 84L726.5 93L659.5 166L714.5 218.5L721.5 221.5L731 214L746 199V204V242L744.5 279.5L741.5 313.5L737.5 345.5L730 410.5L750 412L767.5 413.5L789 414.5L831 415.5H882L924.5 414.5H939L958.5 414L1000.5 411.5L1002.5 410L1000.5 397.5L998.5 383L995 353.5L989 298.5L986.5 270L985.5 240V222V201L1012 222L1016 220L1028.5 208.5L1045.5 191L1067.5 171L1072 164.5L1031 121.5Z" fill={showSecondColor && selectValue === 'T-Shirt' ? secondColor?.value : color1} stroke="#050505"/>
<path d="M330.5 312.5H286.5L282.5 357.5L275 409L282 411.5L297.5 412.5L321 414.5L375 415.5H376.5V414.5V354V312.5H330.5Z" fill={showSecondColor && selectValue === 'T-Shirt' ? secondColor?.value : color1} stroke="#050505"/>
<path d="M488.5 312.5H448V344.5L447.5 395V416H458L490.5 415L524.5 413L550 410.5L548 399L541.5 351L536.5 312.5H488.5Z" fill={showSecondColor && selectValue === 'T-Shirt' ? secondColor?.value : color1} stroke="#050505"/>

{/* Pant Start */}

<path d="M411.5 462H307.5L310.5 445.5L320 444.5H365.5H425.5H513.5L516 462H411.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
<path d="M411.5 462.5H327L297.5 509.5L291 565.5L294 566H316H342L340.5 605.5L338.5 640L338 645L335.5 646.5L329 647.5H317H311.5H297.5H288.5L280 911.5L328.5 917.5L371 911.5L377.5 825L394 691.5L409 586L411.5 567L421 626L432.5 714L453.5 911.5L464 917.5H509.5L543 911.5V881L539 799.5L536 710.5L533 621V552.5L527.5 511L496.5 462.5H411.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
<path d="M316.5 579.5H291.5L290 609.5V646H318.5H333L336 644.5L337.5 640.5V633L339 608L340.5 579.5H316.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>

<path d="M973 461.5L969.5 444.5H938.5H906.5H860.5H810.5H766.5L763.5 460V461.5H864H973Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
<path d="M867.5 462.5H764L754 507.5L750 557.5L747.5 585.5V618L746 650V678L745 724L744 753.5L743 772L742 809L740 845L738.5 884.5V910.5L746 913.5L773.5 915.5H807H825L827.5 910.5L840 786.5L856 645.5L862 603L866 580L868 560.5L871.5 585.5L873.5 594.5L887 697L894 773L902 840.5L909 915.5H947L974 914.5L999 911V896.5L996 822.5L992 724.5L990.75 692.5V674L989.5 660.5V594.5L987.5 560.5L982.5 511.5L977 484.5L971.5 462.5H867.5Z" fill={showSecondColor && selectValue === 'Pant' ? secondColor?.value : color1} stroke="black"/>
{/* Pant End */}

<path d="M503.5 74L469.5 61.5L447 96.5L429.5 118.5L414.5 132.5L413 134.5L404 126L390 111.5L373 89.5L355 62L276 90L239.5 127L206 164L230 190L264.5 222.5H268.5L291 201L292.5 230.5L291 270.5L286.5 311.5H377.5V416H446.5V311.5H537L533.5 271.5L532 233V200.5L558.5 222.5L600.5 185L621 164.5L581 121.5L549 90L503.5 74Z" fill={showSecondColor && selectValue === 'T-Shirt' ? secondColor?.value : color1} stroke="#050505"/>
</svg>
                    {logos.map((logo: any, index: any) => (
                      logo && (
                        <img
                          key={index}
                          src={logo}
                          alt={`Logo ${index + 1}`}
                          className={`absolute pointer-events-none select-none ${
                            selectedLogoIndex === index 
                              ? 'ring-2 ring-blue-500 ring-opacity-50' 
                              : ''
                          }`}
                          style={{
                            width: `${sizes[index]}px`,
                            height: `${sizes[index]}px`,
                            left: `${200 + positions[index].x - sizes[index] / 2}px`,
                            top: `${250 + positions[index].y - sizes[index] / 2}px`,
                            objectFit: "contain",
                            transform: selectedLogoIndex === index && isDragging 
                              ? 'scale(1.01)' 
                              : 'scale(1)',
                            zIndex: selectedLogoIndex === index ? 10 : 1,
                           
                          }}
                          draggable="false"
                        />
                      )
                    ))}

                    {selectedLogoIndex !== -1 && logos[selectedLogoIndex] && (
                      <div className="absolute bottom-6 left-4 text-xs text-gray-500 bg-white bg-opacity-90 px-3 py-2 rounded-lg shadow-sm">
                        <div>Click logo to select • Drag to move • Scroll to resize</div>
                        <div className="text-blue-600 font-medium">
                          Logo {selectedLogoIndex + 1} selected (Size: {sizes[selectedLogoIndex]}px)
                        </div>
                      </div>
                    )}
                    {selectedLogoIndex !== -1 && logos[selectedLogoIndex] && (
                      <Slider  onValueChange={(val)=>{
                        handleSizeChange(val[0])
                      }} className="absolute bottom-2" defaultValue={[33]} max={100} step={1} />
                    )}

                  
                  </div>
                </div>
              </div>
            </div>
          </div>

          <canvas ref={canvasRef} className="hidden" />
        </div>
      </div>
    </>
  );
}